doctype html
html
  head
    meta charset="UTF-8"
    title ピクセル操作 サンプル
    css:
      body {
        font-family: "ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro", Meiryo, "メイリオ", "ＭＳ Ｐゴシック", Verdana, Geneva, Arial, Helvetica;
        font-size: 80%;
      }
      #dp {
        width: 200px;
        min-height: 70px;
        border:1px solid #000000;
        background-color: #eeeeee;
        padding:1em;
        margin:2em;
      }
      #dp img {
        margin-right: 1em;
      }

    javascript:
      (function () {

        // ドロップ領域のdiv要素
        var dp = null;
        // FileReaderインタフェースオブジェクト
        var reader = null;

        /* -------------------------------------------------------------------
         * ページがロードされたときの処理
         * ----------------------------------------------------------------- */
        window.addEventListener("load", function() {
          // ドロップ領域のdiv要素
          dp = document.getElementById("dp");
          // dragoverイベントのイベントリスナーをセット
          dp.addEventListener("dragover", function(evt) {
            evt.preventDefault();
          }, false);
          // dropイベントのイベントリスナーをセット
          dp.addEventListener("drop", function(evt) {
            evt.preventDefault();
            file_droped(evt);
          }, false);
        }, false);

        /* -------------------------------------------------------------------
         * ファイルがドロップされたときの処理
         * ----------------------------------------------------------------- */
        function file_droped(evt) {
          // 表示領域をクリア
          while( dp.firstChild ) {
            dp.removeChild(dp.firstChild);
          }
          // ドロップされたファイルのFileインタフェースオブジェクト
          var file = evt.dataTransfer.files[0];
          // FileReaderインタフェースオブジェクト
          reader = new FileReader();
          // 画像ファイルでなければエラー
          if( ! /^image/.test(file.type) ) {
            alert("画像ファイルをドロップして下さい。");
          }
          // ドロップ画像をロード
          reader.readAsDataURL(file);
          reader.onload = prepare_image;
        }

        /* -------------------------------------------------------------------
         * ドロップされたファイルを表示
         * ----------------------------------------------------------------- */
        function prepare_image(evt) {
          // img要素を生成して、ドロップされた画像を表示
          var image = document.createElement("img");
          image.setAttribute("src", reader.result);
          dp.appendChild(image);
          // img要素がドキュメントにロードされたら処理を続行
          image.onload = function() {
            // 画像のサイズを取得
            var w = parseInt(image.width);
            var h = parseInt(image.height);
            // canvas要素を生成して、画像を組み込む
            var canvas = document.createElement("canvas");
            canvas.width = w;
            canvas.height = h;
            var ctx = canvas.getContext("2d");
            ctx.drawImage(image, 0, 0);
            // canvasのピクセルデータを取得
            var imagedata = ctx.getImageData(0, 0, w, h);
            // グレースケールに変換
            convert_image_to_gray_scale(imagedata.data);
            // canvasのピクセルデータを置き換える
            ctx.putImageData(imagedata, 0, 0);
            // canvasを表示
            dp.appendChild(canvas);
          }
        }

        /* -------------------------------------------------------------------
         * グレースケールに変換
         * ----------------------------------------------------------------- */
        function convert_image_to_gray_scale(data) {
          var len = data.length;
          var pixels = len / 4;
          for( var i=0; i<pixels; i++ ) {
            // R, G, Bそれぞれのコンポーネント値を取り出す
            var r = data[ i*4 ];
            var g = data[ i*4 + 1 ];
            var b = data[ i*4 + 2 ];
            // グレースケールに変換
            var g = parseInt( (11*r + 16*g + 5*b) / 32 );
            // 変換したピクセルデータをセット
            data[ i*4 ] = g;
            data[ i*4 + 1 ] = g;
            data[ i*4 + 2 ] = g;
          }
        }

      })();

  body
    = link_to 'Top Page', root_path
    br
    div#dp
      p ここにデスクトップ上のファイルをドロップして下さい。
