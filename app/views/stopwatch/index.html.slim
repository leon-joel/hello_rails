doctype html
html
  head
    meta charset="UTF-8"
    title Stopwatch
    scss:
      body {
        background: #e0e0e0;
        font-family: "Arial, Sans-Serif";
        text-align: center;
      }
      #timerText {
        color: #00aaff;
        font-size: 128px;
        margin: 40px auto;
        text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
      }
      .btn {
        display: inline-block;
        width: 100px;
        padding: 7px;
        border-radius: 5px;
        box-shadow: 0 4px 0 #0088cc;
        color: #fff;
        background: #00aaff;

        &.active {
          opacity: 1.0;
          cursor: pointer;
        }
        &.inactive {
          opacity: 0.5;
        }
        /*隣接セレクターでボタンの間の余白を設定*/
        & + .btn {
          margin-left: 10px;
        }
      }

  body
    #timerText 0.00
    #start START
    #stop STOP
    #reset RESET

    coffee:
      startTime = 0
      timerId = 0
      elapsedTime = 0
      isRunning = false

      startButton = document.getElementById('start')
      stopButton = document.getElementById('stop')
      resetButton = document.getElementById('reset')
      timerText = document.getElementById('timerText')

      setButtonState = (start, stop, reset) ->
        startButton.className = if start then 'btn active' else 'btn inactive'
        stopButton.className  = if stop  then 'btn active' else 'btn inactive'
        resetButton.className = if reset then 'btn active' else 'btn inactive'

      setButtonState(true, false, false)

      startButton.addEventListener 'click', ->
        return if isRunning  # 2重起動防止
        isRunning = true
        startTime = Date.now()   # 1970/1/1 00:00:00からの経過ミリ秒
        updateTimerText()
        setButtonState(false, true, false)

      stopButton.addEventListener 'click', ->
        return if !isRunning  # 停止してるときは何もしない
        isRunning = false
        elapsedTime += Date.now() - startTime
        clearTimeout(timerId)
        setButtonState(true, false, true)

      resetButton.addEventListener 'click', ->
        return if isRunning   # 実行中は何もしない
        timerText.innerHTML = '0.00'
        elapsedTime = 0
        setButtonState(true, false, false)

      updateTimerText = ->
        timerId = setTimeout ->
          t = Date.now() - startTime + elapsedTime
          timerText.innerHTML = (t / 1000).toFixed(2)
          updateTimerText()
        , 10
